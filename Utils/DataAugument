import torch
import numpy as np

class DataAugument(object):
    @staticmethod
    def rotate(positions: set):
        rotated_positions = set()
        for pos in positions:
            # rotate 90, 180, 270 degree
            for i in range(1, 4):
                rotated_positions.add(tuple(np.rot90(np.array(pos).reshape((3, 3)), i, [0, 1]).reshape(-1).tolist()))
        return rotated_positions

    @staticmethod
    def transpose(positions: set):
        transposed_positions = set()
        for pos in positions:
            # rotate 90, 180, 270 degree
            for i in range(2):
                transposed_positions.add(tuple(np.transpose(np.array(pos).reshape((3, 3)), i).reshape(-1).tolist()))
        return transposed_positions

    # def
    @staticmethod
    def get_transformations():
        start_pos = tuple(range(9))
        transformations = set()
        transformations.add(start_pos)
        print(transformations)
        # step 1 operate rotation
        rotated_transformations = DataAugument.rotate(transformations)
        transformations |= rotated_transformations
        print(transformations)
        # step 2 operate transpose
        # transposed_transformations = transposed(transformations)
        # step 3 operate flip

DataAugument.get_transformations()
